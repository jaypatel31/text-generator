{"version":3,"sources":["components/Output.js","components/Select.js","components/Text.js","App.js","reportWebVitals.js","index.js"],"names":["Output","newData","data","split","className","style","maxWidth","marginLeft","marginRight","map","item","index","Select","wrap","setWrap","role","aria-label","display","width","margin","type","name","id","value","onChange","autoComplete","checked","htmlFor","Text","paras","setParas","sentences","setSentences","e","Number","target","placeholder","App","useState","text","setText","useEffect","getSampleText","axios","get","then","response","catch","err","console","log","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c632ae96.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Output({data}) {\r\n\tlet newData = data.split(\"\\n\");\r\n\treturn (\r\n\t\t<div className=\"card border-primary mb-3 mt-3\" style={{maxWidth:\"80%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\r\n\t\t  <div className=\"card-header\">Output</div>\r\n\t\t  <div className=\"card-body\">\r\n\t\t    <h4 className=\"card-title mb-3\">Random Text Generated</h4>\r\n\t\t    {\r\n\t\t    \tnewData.map((item,index)=>{\r\n\t\t    \t\tif(item!==\"\"){\r\n\t\t    \t\t\treturn (\r\n\t\t    \t\t\t\t<p className=\"card-text \" key={index}>{item}</p>\r\n\t\t    \t\t\t)\r\n\t\t    \t\t}\r\n\t\t    \t})\r\n\t\t    }\r\n\t\t    \r\n\t\t  </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Output","import React from 'react'\r\n\r\nfunction Select({wrap, setWrap}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"btn-group switch-container\" role=\"group\" aria-label=\"Basic radio toggle button group\" style={{display:\"flex\", width:\"25%\",margin:\"auto\"}}>\r\n\t\t\t  <input type=\"radio\" className=\"btn-check\" name=\"wrapper\" id=\"btnradio1\" value={true} onChange={()=>setWrap(true)} autoComplete=\"off\" checked={(wrap)?true:false}/>\r\n\t\t\t  <label className=\"btn btn-outline-primary\" htmlFor=\"btnradio1\">True</label>\r\n\t\t\t  <input type=\"radio\" className=\"btn-check\" name=\"wrapper\" id=\"btnradio2\" value={false} onChange={()=>setWrap(false)}  autoComplete=\"off\" checked={(!wrap)?true:false}/>\r\n\t\t\t  <label className=\"btn btn-outline-primary\" htmlFor=\"btnradio2\">False</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Select","import React from 'react'\r\n\r\nfunction Text({paras, setParas, sentences, setSentences}) {\r\n\treturn (\r\n\t\t<div className=\"form-group mt-5 form-container\" >\r\n\t\t\t  <div className=\"form-floating mb-3 input-container\" >\r\n\t\t\t    <input type=\"tel\" className=\"form-control\" id=\"floatingInput\" value={paras} onChange={(e)=>setParas(Number(e.target.value))} placeholder=\"\"/>\r\n\t\t\t    <label htmlFor=\"floatingInput\">Number of Paragraph</label>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-floating mb-3 input-container\" >\r\n\t\t\t    <input type=\"tel\" className=\"form-control\" id=\"floatingInput\" value={sentences} onChange={(e)=>setSentences(Number(e.target.value))} placeholder=\"\"/>\r\n\t\t\t    <label htmlFor=\"floatingInput\">Number of Sentences</label>\r\n\t\t\t  </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Text","import './App.css';\nimport axios from \"axios\"\nimport React, {useState,useEffect} from \"react\"\nimport Output from \"./components/Output\"\nimport Select from \"./components/Select\"\nimport Text from \"./components/Text\"\n\nfunction App() {\n  const [paras, setParas] = useState(2);\n  const [sentences, setSentences] = useState(4);\n  const [wrap, setWrap] = useState(true);\n  const [text,setText] = useState('');\n\n  useEffect(() => {\n    getSampleText()\n  }, [wrap,sentences,paras])\n\n  const getSampleText = () =>{\n    \n    axios.get(`http://metaphorpsum.com/paragraphs/${paras}/${sentences + ((wrap===true)?\"?p=true\":\"\")}`)\n      .then(response=>setText(response.data))\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div >\n      <h1 className=\"heading\">Text Generator</h1>\n      <Text paras={paras} setParas={setParas} sentences={sentences} setSentences={setSentences}/>\n      <span style={{textAlign:\"center\",margin:\"auto\",display:\"block\"}}>HTML Wrap:</span> <Select wrap={wrap} setWrap={setWrap}/>\n      <Output data={text}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}